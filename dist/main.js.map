{"version":3,"sources":["webpack://weather-journal-app/./src/client/js/app.js"],"names":["generate","document","getElementById","d","Date","newDate","getMonth","getDate","getFullYear","addEventListener","async","zip","value","feeling","url","request","fetch","console","log","weatherData","json","error","getWeatherData","then","response","method","credentials","headers","body","JSON","stringify","postData","temperature","main","temp","date","feelings","updateUI","data","innerHTML"],"mappings":"mBACA,MAEMA,EAAWC,SAASC,eAAe,YAGzC,IAAIC,EAAI,IAAIC,KACRC,EAAUF,EAAEG,WAAW,IAAKH,EAAEI,UAAU,IAAKJ,EAAEK,cAuCnDR,EAASS,iBAAiB,SAG1BC,iBACIC,IAAMV,SAASC,eAAe,OAAOU,MACrC,MAAMC,EAAUZ,SAASC,eAAe,YAAYU,MAzC1BF,OAAOI,IAEjC,MAAMC,QAAgBC,MAAMF,GAC5BG,QAAQC,IAAIH,GACZ,IACI,MAAMI,QAAoBJ,EAAQK,OAElC,OADAH,QAAQC,IAAI,iBAAkBC,GACvBA,EAEX,MAAME,GACFJ,QAAQC,IAAI,QAASG,KAiCzBC,CApDQ,uDAmDaX,IAlDV,wDAoDVY,MAAMJ,IA5BMT,OAAQI,EAAM,GAAIK,EAAc,MAE7C,MAAMK,QAAiBR,MAAMF,EAAK,CAClCW,OAAQ,OACRC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUX,KAGrB,UACwBK,EAASJ,OAEhC,MAAMC,GACPJ,QAAQC,IAAI,QAASG,KAcjBU,CAAS,IAAK,CAACC,YAAab,EAAYc,KAAKC,KAAMC,KAAM9B,EAAS+B,SAAUvB,OAE/EU,MAAK,KAAKc,UAKf,MAAMA,EAAW3B,UACb,MAAMK,QAAgBC,MAAM,QAC5B,IACI,MAAMsB,QAAavB,EAAQK,OAC3BnB,SAASC,eAAe,QAAQqC,UAAYD,EAAKH,KACjDlC,SAASC,eAAe,QAAQqC,UAAY,GAAGD,EAAKN,sBACpD/B,SAASC,eAAe,WAAWqC,UAAYD,EAAKF,SACvD,MAAMf,GACHJ,QAAQC,IAAI,QAAQG,M","file":"main.js","sourcesContent":["/* Global Variables */\r\nconst url = 'https://api.openweathermap.org/data/2.5/weather?zip=';\r\nconst apiKey = '&units=metric&appid=93ec3247177dbb56166d5141dcdca068';\r\nconst generate = document.getElementById('generate');\r\n\r\n// Create a new date instance dynamically with JS\r\nlet d = new Date();\r\nlet newDate = d.getMonth()+'.'+ d.getDate()+'.'+ d.getFullYear();\r\n\r\n// GET Info from Api using async function and \r\nexport const getWeatherData = async (url) => {\r\n\r\n    const request = await fetch(url);\r\n    console.log(request);\r\n    try{\r\n        const weatherData = await request.json();\r\n        console.log('weather data: ', weatherData);\r\n        return weatherData;\r\n    }\r\n    catch(error){\r\n        console.log('error', error)\r\n    }\r\n}\r\n\r\n\r\n// Async POST to server the landed information from API \r\nconst postData = async ( url = '', weatherData = {})=>{\r\n\r\n    const response = await fetch(url, {\r\n    method: 'POST', \r\n    credentials: 'same-origin', \r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(weatherData), \r\n  });\r\n\r\n    try {\r\n      const newData = await response.json();\r\n      return newData;\r\n    }catch(error) {\r\n    console.log('error', error);\r\n    }\r\n};\r\n\r\n//add event listener to \"Generate\" button to GET API details \r\ngenerate.addEventListener('click', genFunction)\r\n\r\n//Async function to get the inputs and call the api data\r\nasync function genFunction(){\r\n    zip = document.getElementById(\"zip\").value;\r\n    const feeling = document.getElementById('feelings').value;\r\n    const apiUrl = url + zip + apiKey;\r\n    getWeatherData(apiUrl)\r\n    .then((weatherData)=>{\r\n        postData('/', {temperature: weatherData.main.temp, date: newDate, feelings: feeling})\r\n    })\r\n    .then(()=>{updateUI()}\r\n    );\r\n}\r\n\r\n// Update UI Dynamically \r\nconst updateUI = async () =>{\r\n    const request = await fetch('/all');\r\n    try{\r\n        const data = await request.json();\r\n        document.getElementById('date').innerHTML = data.date;\r\n        document.getElementById('temp').innerHTML = `${data.temperature} &#8451;`;\r\n        document.getElementById('content').innerHTML = data.feelings;\r\n    }catch(error){\r\n        console.log('error',error);\r\n    };   \r\n}\r\n"],"sourceRoot":""}